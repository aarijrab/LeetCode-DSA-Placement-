Given an array arr[] of N non-negative integers representing the height of blocks. If width of each block is 1, compute how much water can be trapped between the blocks during the rainy season. 
 

Example 1:

Input:
N = 6
arr[] = {3,0,0,2,0,4}
Output:
10


N = 4
arr[] = {7,4,0,9}
Output:
10
Explanation:
Water trapped by above 
block of height 4 is 3 units and above 
block of height 0 is 7 units. So, the 
total unit of water trapped is 10 units.


Code:------------------------------------------


 public:
    long long trappingWater(int arr[], int n){
        // code here
        int left[n];
        int right[n];
        left[0]=arr[0];
        for(int i=1;i<=n-1;i++) {
            left[i]=max(arr[i],left[i-1]);
        }
        right[n-1]=arr[n-1];
        for(int i=n-2;i>=0;i--) {
            right[i]=max(arr[i],right[i+1]);
        }
        int ans=0;
        for(int i=0;i<=n-1;i++) {
            ans+= min(left[i],right[i])-arr[i];
        }
        return ans;
    }
